{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
PRODUCT CARD COMPONENT
----------------------------------------------------------------------------------------------------------------------

This component is used in collection and featured collection to render a single product as a card

********************************************
Supported variables
********************************************

* product: the product to render
* stacked: define if the product is stacked or not on mobile
* reveal: if set to true, the card will be revealed on scroll through animation
* show_badges: show or not the badges (default to true if nothing is set).
* show_rating: show or not the rating. If nothing is set, the theme uses the default product card setting
* show_vendor: show or not the vendor. If nothing is set, the theme uses the default product card setting
* show_quick_buy: show or not the quick buy (which open a modal if the product contains more than 1 choice)
* show_secondary_image: show or not the secondary media on hover. If nothing is set, the theme uses the default product card setting
* show_swatches: show or not the swatches. The swatch type is inferred from setting, and will default to true if nothing is set.
* hide_product_information: if set to true, all content (vendor, badge, title...) are not rendered, to create image-based grid
* quick_buy_context: a unique text to dissociate quick buy if the same product is embedded multiple times
* fetch_priority: the fetch priority for the images - high, low, or auto
* lazy_load: image loading - lazy or eager
* class: additional classes, used on PLP product cards to control availability sort order
{%- endcomment -%}

{%- liquid
  if hide_product_information
    assign show_badges = false
    assign show_rating = false
    assign show_vendor = false
    assign show_title = false
    assign show_prices = false
    assign show_swatches = false
    assign show_quick_buy = show_quick_buy | default: settings.show_quick_buy, allow_false: true
    assign show_secondary_image = show_secondary_image | default: settings.show_secondary_image, allow_false: true
  else
    assign show_badges = show_badges | default: true, allow_false: true
    assign show_rating = show_rating | default: settings.show_product_rating, allow_false: true
    assign show_vendor = show_vendor | default: settings.show_vendor, allow_false: true
    assign show_quick_buy = show_quick_buy | default: settings.show_quick_buy, allow_false: true
    assign show_title = true
    assign show_prices = true
    assign show_secondary_image = show_secondary_image | default: settings.show_secondary_image, allow_false: true
    assign show_swatches = show_swatches | default: true, allow_false: true
  endif

  assign show_inventory = show_inventory | default: false, allow_false: true

  assign fetch_priority = fetch_priority | default: 'auto'
  assign lazy_load = lazy_load | default: 'lazy'

  assign classes = class
-%}

{%- capture product_form_id -%}product-form-{{ product.id }}-{{ section.id }}{%- endcapture -%}

<product-card class="product-card {{ classes }}" {% if reveal %}reveal-on-scroll="true"{% endif %} handle="{{ product.handle | escape }}">
  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT MEDIA MOBILE
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if product.media.size > 0 -%}
    <div class="relative block product-card__figure lg:hidden">

      <!-- Swym Wishlist Plus EPI Button -->
      <button
        aria-label="Add to Wishlist"
        data-with-epi="true"
        style="width: 22px; height: 20px; z-index: 2;"
        class="!absolute !right-2 !top-2 swym-button swym-add-to-wishlist-view-product product_{{product.id}}"
        data-swaction="addToWishlist"
        data-product-id="{{product.id | json}}"
        data-variant-id="{{product.first_available_variant.id}}"
        data-product-url="{{ shop.url }}{{ product.url }}">
        {%- render 'heart-outline' %}
      </button>

      {%- if show_badges -%}
        {%- render 'collection-badges', product: product, vertical: true -%}
      {%- endif -%}

      <a href="{{ product.url }}" class="product-card__media" data-instant>

        {%- capture sizes -%}
          {%- if stacked -%}
            (max-width: 699px) calc(100vw / {{ section.settings.products_per_row_mobile }}), (max-width: 999px) calc(100vw / {{ 3 | at_most: section.settings.products_per_row_desktop | default: 3 }} - 64px), calc((100vw - 96px) / {{ section.settings.products_per_row_desktop | default: 3 }} - (24px / {{ section.settings.products_per_row_desktop | default: 3 }} * {{ section.settings.products_per_row_desktop | default: 3 | minus: 1 }}))
          {%- else -%}
            (max-width: 699px) 74vw, (max-width: 999px) 38vw, calc((100vw - 96px) / {{ section.settings.products_per_row_desktop | default: 3 }} - (24px / {{ section.settings.products_per_row_desktop | default: 3 }} * {{ section.settings.products_per_row_desktop | default: 3 | minus: 1 }}))
          {%- endif -%}
        {%- endcapture -%}

        {%- capture main_image_classes -%}product-card__image product-card__image--primary {% if settings.product_image_aspect_ratio contains 'crop' %}object-cover{% endif %} aspect-{{ settings.product_image_aspect_ratio | split: '_' | first }}{%- endcapture -%}
        {{- product.featured_media | image_url: width: product.featured_media.width | image_tag: loading: lazy_load, fetchpriority: fetch_priority, sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}

        {%- comment -%} Hide Second product image on mobile
        {%- if show_secondary_image and product.media.size > 1 -%}
          {%- assign next_media = product.media[product.featured_media.position] | default: product.media[1] -%}

          <!-- Swym Wishlist Plus EPI Button -->
          <button
            aria-label="Add to Wishlist"
            data-with-epi="true"
            style="width: 22px; height: 20px; z-index:2;"
            class="!absolute !right-2 !top-2 swym-button swym-add-to-wishlist-view-product product_{{product.id}}"
            data-swaction="addToWishlist"
            data-product-id="{{product.id | json}}"
            data-variant-id="{{product.first_available_variant.id}}"
            data-product-url="{{ shop.url }}{{ product.url }}">
            {%- render 'heart-outline' %}
          </button>
          
          {{- next_media | image_url: width: next_media.width | image_tag: class: 'product-card__image product-card__image--secondary', loading: 'lazy', fetchpriority: 'low', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800' -}}
        {%- endif -%}
        {%- endcomment -%}

      </a>

      {%- if show_quick_buy and product.available -%}
        {%- if product.variants.size == 1 and product.selling_plan_groups.size == 0 -%}
          {%- form 'product', product, is: 'product-form' -%}
            <input type="hidden" name="on_success" value="force_open_drawer">
            <input type="hidden" name="quantity" value="1">
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <button type="submit" class="product-card__quick-add-button">
              <span class="sr-only">{{ 'product.general.add_to_cart_button' | t }}</span>
              {%- render 'icon' with 'plus' -%}
            </button>
          {%- endform -%}
        {%- else -%}
          {%- capture quick_buy_id -%}product-quick-buy-{{ section.id }}-{{ block.id }}-{{ quick_buy_context }}-{{ product.id }}{%- endcapture -%}

          <button type="button" aria-controls="{{ quick_buy_id }}" class="product-card__quick-add-button">
            <span class="sr-only">{{ 'product.general.choose_options' | t }}</span>
            {%- render 'icon' with 'plus' -%}
          </button>

          <quick-buy-modal handle="{{ product.handle }}" class="quick-buy-modal modal" id="{{ quick_buy_id }}">
          </quick-buy-modal>
        {%- endif -%}
      {%- endif -%}
    </div>

    {%- comment -%}
    --------------------------------------------------------------------------------------------------------------------
    PRODUCT MEDIA DESKTOP
    --------------------------------------------------------------------------------------------------------------------
    {%- endcomment -%}

    <div class="relative hidden product-card__figure lg:block group">
      {%- if show_badges -%}
        {%- render 'collection-badges', product: product, vertical: true -%}
      {%- endif -%}

      {%- comment -%} Driver DESKTOP {%- endcomment -%}

      <a href="{{ product.url }}" class="product-card__media" data-instant>
        {%- capture sizes -%}
          {%- if stacked -%}
            (max-width: 699px) calc(100vw / {{ section.settings.products_per_row_mobile }}), (max-width: 999px) calc(100vw / {{ 3 | at_most: section.settings.products_per_row_desktop | default: 3 }} - 64px), calc((100vw - 96px) / {{ section.settings.products_per_row_desktop | default: 3 }} - (24px / {{ section.settings.products_per_row_desktop | default: 3 }} * {{ section.settings.products_per_row_desktop | default: 3 | minus: 1 }}))
          {%- else -%}
            (max-width: 699px) 74vw, (max-width: 999px) 38vw, calc((100vw - 96px) / {{ section.settings.products_per_row_desktop | default: 3 }} - (24px / {{ section.settings.products_per_row_desktop | default: 3 }} * {{ section.settings.products_per_row_desktop | default: 3 | minus: 1 }}))
          {%- endif -%}
        {%- endcapture -%}

        {%- capture main_image_classes -%}product-card__image product-card__image--primary {% if settings.product_image_aspect_ratio contains 'crop' %}object-cover{% endif %} aspect-{{ settings.product_image_aspect_ratio | split: '_' | first }}{%- endcapture -%}
        
        {{- product.featured_media | image_url: width: product.featured_media.width | image_tag: loading: lazy_load, fetchpriority: fetch_priority, sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}

        <!-- Swym Wishlist Plus EPI Button -->
        <button
          aria-label="Add to Wishlist"
          data-with-epi="true"
          style="width: 22px; height: 20px; z-index: 1;"
          class="!absolute !right-3 !top-3 group-hover:!block !hidden swym-button swym-add-to-wishlist-view-product product_{{product.id}}"
          data-swaction="addToWishlist"
          data-product-id="{{product.id | json}}"
          data-variant-id="{{product.first_available_variant.id}}"
          data-product-url="{{ shop.url }}{{ product.url }}">
          {%- render 'heart-outline' %}
        </button>

        {%- if show_secondary_image and product.media.size > 1 -%}
          {%- assign next_media = product.media[product.featured_media.position] | default: product.media[1] -%}
          {{- next_media | image_url: width: next_media.width | image_tag: class: 'product-card__image product-card__image--secondary', loading: 'lazy', fetchpriority: 'low', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800' -}}
        {%- endif -%}
      </a>

      {%- if show_quick_buy and product.available -%}
        {%- if product.variants.size == 1 and product.selling_plan_groups.size == 0 -%}
          {%- form 'product', product, is: 'product-form' -%}
            <input type="hidden" name="on_success" value="force_open_drawer">
            <input type="hidden" name="quantity" value="1">
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <button type="submit" class="product-card__quick-add-button">
              <span class="sr-only">{{ 'product.general.add_to_cart_button' | t }}</span>
              {%- render 'icon' with 'plus' -%}
            </button>
          {%- endform -%}
        {%- else -%}
          {%- capture quick_buy_id -%}product-quick-buy-{{ section.id }}-{{ block.id }}-{{ quick_buy_context }}-{{ product.id }}{%- endcapture -%}

          <button type="button" aria-controls="{{ quick_buy_id }}" class="product-card__quick-add-button">
            <span class="sr-only">{{ 'product.general.choose_options' | t }}</span>
            {%- render 'icon' with 'plus' -%}
          </button>

          <quick-buy-modal handle="{{ product.handle }}" class="quick-buy-modal modal" id="{{ quick_buy_id }}">
          </quick-buy-modal>
        {%- endif -%}
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT INFO
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <div class="gap-1 product-card__info empty:hidden">
    {%- assign text_class = '' -%}

    {%- if settings.product_card_text_font == 'heading' -%}
      {%- assign text_class = 'h6 lg:text-sm' -%}
    {%- endif -%}

    {%- if show_title or show_prices or show_vendor and product.vendor != blank -%}
      <div class="gap-1 v-stack justify-items-center">
        {%- if show_vendor and product.vendor != blank -%}
          {%- capture vendor_class -%}text-xs uppercase tracking-wide {% if settings.product_card_text_font == 'heading' %}heading{% endif %}{% endcapture %}
          {%- render 'vendor' with product.vendor, class: vendor_class -%}
        {%- endif -%}

        {%- if show_title or show_prices -%}
          <div class="gap-1 v-stack justify-items-center">
            {%- if show_title -%}
              <a href="{{ product.url }}" class="product-title {% if text_class != blank %}{{ text_class }}{% endif %} {% if settings.product_title_max_lines > 0 %}line-clamp{% endif %}" {% if settings.product_title_max_lines > 0 %}style="--line-clamp-count: {{ settings.product_title_max_lines }}"{% endif %} data-instant>
                {{- product.title -}}
              </a>
            {%- endif -%}

            {%- if show_prices -%}
              {%- render 'price-list', product: product, context: 'card' -%}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}

    {%- if show_swatches and settings.product_color_display != 'hide' -%}
      {%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}

      {%- for color_label in color_label_list -%}
        {%- if product.options_by_name[color_label] != blank -%}
          {%- assign product_option = product.options_by_name[color_label] -%}
          {%- capture name -%}swatch-{{ quick_buy_context }}-{{ section.id }}-{{ product.id }}-{{ product_option.position }}{%- endcapture -%}

          {%- case settings.product_color_display -%}
            {%- when 'count' -%}
              <p class="text-xs tracking-wide uppercase text-subdued">{{- 'product.general.available_colors_count' | t: count: product_option.values.size -}}</p>

            {%- when 'swatch' -%}
              <fieldset class="justify-center gap-1 h-stack wrap" data-option-position="{{ product_option.position }}">
                {%- liquid
                  for option_value in product_option.values
                    if forloop.first or product.selected_or_first_available_variant.matched and option_value == product_option.selected_value
                      assign selected = true
                    else
                      assign selected = false
                    endif

                    if option_value.swatch.image
                      render 'option-value', type: 'swatch', value: option_value, image: option_value.swatch.image, name: name, selected: selected, size: 'sm'
                    elsif option_value.swatch.color
                      render 'option-value', type: 'swatch', value: option_value, color: option_value.swatch.color, name: name, selected: selected, size: 'sm'
                    else
                      render 'option-value', type: 'swatch', value: option_value, name: name, selected: selected, size: 'sm'
                    endif
                  endfor
                -%}
              </fieldset>
          {%- endcase -%}

          {%- break -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}

    {%- if show_rating -%} {%- comment -%} Yotpo Star Ratings widget snippet used below {%- endcomment -%}
      {%- unless template contains 'collection' or template contains 'search' -%} {%- comment -%} Hide stars on PLPs {%- endcomment -%}
        {%- render 'product-rating', product: product, show_empty: settings.show_product_rating_if_empty, display_mode: settings.product_rating_mode -%}
      {%- endunless -%}
    {%- endif -%}

    {%- comment -%} Fera.ai Visitor Counter widget {%- endcomment -%}
    <div data-fera-container="110385" data-product_id="{{ product.id }}"></div>
  </div>
  {%- if show_inventory -%}
    <div class="text-center">
      {%- render 'inventory',
        product: product,
        show_in_stock_quantity: true,
        show_progress_bar: false,
        progress_bar_max_value: 50,
        low_threshold: 10,
        form_id: product_form_id
      -%}
    </div>
  {%- endif -%}
</product-card>
